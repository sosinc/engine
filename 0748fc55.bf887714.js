(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),d=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=d(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(n),p=r,m=u["".concat(o,".").concat(p)]||u[p]||b[p]||i;return n?a.a.createElement(m,c(c({ref:t},s),{},{components:n})):a.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},53:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return d}));var r=n(2),a=n(6),i=(n(0),n(102)),o={id:"collections",title:"Collections",sidebar_label:"Collections"},c={unversionedId:"patterns/collections",id:"patterns/collections",isDocsHomePage:!1,title:"Collections",description:"Collections",source:"@site/docs/patterns/collections.md",permalink:"/engine/docs/patterns/collections",editUrl:"https://github.com/code11/engine/edit/master/docs/docs/patterns/collections.md",sidebar_label:"Collections",sidebar:"docs",previous:{title:"Aggregate",permalink:"/engine/docs/patterns/aggregate"},next:{title:"Flags",permalink:"/engine/docs/patterns/flags"}},l=[{value:"Collections",id:"collections",children:[]}],s={rightToc:l};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"collections"},"Collections"),Object(i.b)("p",null,"Collections group similar data structures together and provide a friendly way of\naccessing and working with those data structures. Collections are very useful\nwhen used in conjuction with entities."),Object(i.b)("p",null,"Entities are domain objects that are uniquely defined by a unique identifier."),Object(i.b)("p",null,"In Engine, it's best to aim for achieving a balance between normalizing and\ndenormalizing data based on the needs of observing changes or accessing partial\nor processed data. As a rule of thumb, data received from the outside of the\nsystem should be kept in a raw form somewhere so that it can be transformed in\nthe many ways needed from your system."),Object(i.b)("p",null,"Also, it's very important for an Entity to have its ",Object(i.b)("inlineCode",{parentName:"p"},"id")," stored in its data\nstructure. Entities should always be able to exist on their own if needed."),Object(i.b)("p",null,"In the following example several data processing patterns are used:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"articles.raw")," stores denormalized data received from an API."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"articles.items")," is created by a producer that ",Object(i.b)("inlineCode",{parentName:"li"},"reduce"),"s ",Object(i.b)("inlineCode",{parentName:"li"},"articles.raw")," and\nextracts only the information needed by the application; and only the items\nneeded for the application."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"articles.ids")," is created by a producer that ",Object(i.b)("inlineCode",{parentName:"li"},"reduce"),"s ",Object(i.b)("inlineCode",{parentName:"li"},"articles.items")," and\nextracts only the list of ids. This is useful when you want to iterate on all\narticles but you don't want to get the data associated with the ids."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"articles.count")," is made by a producer that ",Object(i.b)("inlineCode",{parentName:"li"},"reduce"),"s ",Object(i.b)("inlineCode",{parentName:"li"},"articles.ids")," and gives\nthe number of articles."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"articles.filters")," is made by a producer that groups articles by their\ncategory. It's useful when you want to iterate on a single category. The\nexistence of this producer is determined by the need of this information.")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"{\n  articles: {\n    raw: {\n      abc: {\n        [...]\n      },\n      dfg: {\n        [...]\n      },\n      xyz: {\n        [...]\n      },\n    },\n    items: {\n      abc: {\n        id: \"abc\",\n        title: 'Abc shorts',\n        category: 'shorts'\n      },\n      xyz: {\n        id: \"xyz\",\n        title: 'Xyz news',\n        category: 'news'\n      },\n    },\n    ids: ['xyz'],\n    count: 1,\n    filters: {\n      category: {\n        shorts: ['abc'],\n        news: ['xyz]\n      }\n    },\n  }\n}\n")))}d.isMDXComponent=!0}}]);