(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{102:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var b=a.a.createContext({}),l=function(e){var t=a.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,o=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),s=l(n),d=r,m=s["".concat(o,".").concat(d)]||s[d]||u[d]||c;return n?a.a.createElement(m,i(i({ref:t},b),{},{components:n})):a.a.createElement(m,i({ref:t},b))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var b=2;b<c;b++)o[b]=n[b];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},95:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(6),c=(n(0),n(102)),o={id:"view",title:"view",sidebar_label:"view"},i={unversionedId:"api/view",id:"api/view",isDocsHomePage:!1,title:"view",description:"`ts",source:"@site/docs/api/view.md",permalink:"/engine/docs/api/view",editUrl:"https://github.com/code11/engine/edit/master/docs/docs/api/view.md",sidebar_label:"view",sidebar:"docs",previous:{title:"producer",permalink:"/engine/docs/api/producer"},next:{title:"observe",permalink:"/engine/docs/api/observe"}},p=[{value:"Overview",id:"overview",children:[]},{value:"Example",id:"example",children:[]},{value:"<code>view.producers</code>",id:"viewproducers",children:[]},{value:"Best practices",id:"best-practices",children:[]},{value:"Instance",id:"instance",children:[]}],b={rightToc:p};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'import { view } from "@c11/engine.macro"\n')),Object(c.b)("h2",{id:"overview"},"Overview"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"view")," creates Engine views, which render HTML in browser. ",Object(c.b)("inlineCode",{parentName:"p"},"view")," can use Engine\noperators ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/api/observe"}),"observe"),", ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/api/get"}),"get"),", and\n",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/api/update"}),"update")," to interact with global state."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"observe"),", ",Object(c.b)("inlineCode",{parentName:"p"},"get")," and ",Object(c.b)("inlineCode",{parentName:"p"},"update"),' are used in the first object argument of a\nfunction, also called "header" of the function.'),Object(c.b)("p",null,"A ",Object(c.b)("inlineCode",{parentName:"p"},"view")," is just a specialized form of a ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/api/producer"}),"producer"),". All the\n",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/api/producer#parts"}),"concepts")," and ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/api/producer#best-practices"}),"best\npractices")," of producers apply for views as\nwell."),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)("p",null,"For example, a react component that looks like:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),"const Button = ({ title }) => (<button>{title}</button>);\n")),Object(c.b)("p",null,"can be converted to an Engine view by labeling it with ",Object(c.b)("inlineCode",{parentName:"p"},"view"),":"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),"const Button: view = ({ title }) => (<button>{title}</button>);\n")),Object(c.b)("p",null,"No other change is required. Except the header part of the function, rest of it\nis a normal React component. In the header, Engine operators can be used to\ninteract with state. For example:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),"const Button: view = ({\n  title,\n  count = observe.count,\n  updateCount = update.count\n}) => (\n  <button\n    onClick={() => updateCount((count || 0) + 1)}\n  >{title}: {count}\n  </button>\n);\n")),Object(c.b)("h2",{id:"viewproducers"},Object(c.b)("inlineCode",{parentName:"h2"},"view.producers")),Object(c.b)("p",null,"A ",Object(c.b)("inlineCode",{parentName:"p"},"view")," can have one or more producers assigned to it as an array. e.g a\nproducer named ",Object(c.b)("inlineCode",{parentName:"p"},"myProducer")," ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/api/producer"}),"producer")," can be added to\n",Object(c.b)("inlineCode",{parentName:"p"},"Button")," view with:"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),"Button.producers = [myProducer];\n")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"view"),"s are just specialized ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/api/producer"}),"producer"),"s. Only difference\nbetween a view and a producer is that a view can:"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Return JSX which gets rendered as HTML in browser"),Object(c.b)("li",{parentName:"ol"},"Have ",Object(c.b)("inlineCode",{parentName:"li"},".producers")," property")),Object(c.b)("h2",{id:"best-practices"},"Best practices"),Object(c.b)("p",null,"Engine recommends that ",Object(c.b)("inlineCode",{parentName:"p"},"view"),"s should contain as little logic as possible.\nIdeally, a view should be completely free from all forms of logic, but can\ncontain minimal amount of logic needed to provide a clean API."),Object(c.b)("p",null,"Instead of performing any logic in view, a producer should be created for the\nview to perform required business logic."),Object(c.b)("h2",{id:"instance"},"Instance"),Object(c.b)("p",null,"For debugging pruposes only - Documentation in progress"))}l.isMDXComponent=!0}}]);