(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{65:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return s}));var a=n(2),r=n(6),o=(n(0),n(82)),i={id:"setup",title:"Quick Start",sidebar_label:"Setup"},c={unversionedId:"quick-start-tutorial/setup",id:"quick-start-tutorial/setup",isDocsHomePage:!1,title:"Quick Start",description:"Although Engine itself is platform neutral, Engine's reactive features really",source:"@site/docs/quick-start-tutorial/setup.md",permalink:"/engine/docs/quick-start-tutorial/setup",editUrl:"https://github.com/code11/engine/edit/master/docs/docs/quick-start-tutorial/setup.md",sidebar_label:"Setup",sidebar:"docs",previous:{title:"Usage",permalink:"/engine/docs/usage"},next:{title:"Static UI",permalink:"/engine/docs/quick-start-tutorial/static-ui"}},p=[{value:"Building a React Engine App",id:"building-a-react-engine-app",children:[]},{value:"Setup",id:"setup",children:[{value:"Install Engine",id:"install-engine",children:[]},{value:"Create an Engine instance",id:"create-an-engine-instance",children:[]},{value:"Add styles",id:"add-styles",children:[]},{value:"Starter Markup",id:"starter-markup",children:[]}]}],l={rightToc:p};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Although Engine itself is platform neutral, Engine's reactive features really\nshine in context of boilerplate laden world of React. So let's get started with:"),Object(o.b)("h2",{id:"building-a-react-engine-app"},"Building a React Engine App"),Object(o.b)("p",null,"We are going to build a TodoMVC app. That's why todo apps exist, to be built in\nintroductory tutorials. You can take a look at the\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://todomvc.com/"}),"todomvc.com")," to get a feeling of what we are about to\nimplement."),Object(o.b)("h2",{id:"setup"},"Setup"),Object(o.b)("p",null,"Let's use ",Object(o.b)("inlineCode",{parentName:"p"},"create-react-app")," to set up a vanilla react app for us."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"yarn create react-app engine-todos --template typescript\n")),Object(o.b)("p",null,"We are using the typescript template here. Engine itself is written in\nTypescript, and we highly recommend using it."),Object(o.b)("p",null,"Doing a ",Object(o.b)("inlineCode",{parentName:"p"},"yarn start")," will start a vanilla react app on\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"http://localhost:3000"}),"localhost:3000"),". Before we start building our glorious\ntodos app, let's port the vanilla React app to Engine."),Object(o.b)("h3",{id:"install-engine"},"Install Engine"),Object(o.b)("p",null,"Following command will install engine dependencies for us:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"yarn add @c11/engine.macro @c11/engine.react\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"@c11/engine.macro")," contain the platform agnostic core of Engine, and\n",Object(o.b)("inlineCode",{parentName:"p"},"@c11/engine.react")," contain the React bindings. You can read more about these,\nand more engine packages on ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"../packages"}),"packages")," page."),Object(o.b)("h3",{id:"create-an-engine-instance"},"Create an Engine instance"),Object(o.b)("p",null,"First thing we need to do is create an ",Object(o.b)("inlineCode",{parentName:"p"},"Engine")," instance, and let it take\ncontrol of our app. In the ",Object(o.b)("inlineCode",{parentName:"p"},"src/index.tsx")," file:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-diff"}),"import React from 'react';\n- import ReactDOM from 'react-dom';\n+ import { Engine } from \"@c11/engine.react\";\nimport './index.css';\nimport App from './App';\n\n- ReactDOM.render(\n-   <React.StrictMode>\n-     <App />\n-   </React.StrictMode>,\n-   document.getElementById(\"root\")\n- );\n+ const engine = new Engine({\n+   view: {\n+     element: <App />,\n+     root: \"#root\"\n+   }\n+ });\n+\n+ engine.start();\n")),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"We import and create an ",Object(o.b)("inlineCode",{parentName:"li"},"Engine")," instance"),Object(o.b)("li",{parentName:"ol"},"Instead of having ",Object(o.b)("inlineCode",{parentName:"li"},"react-dom")," mounting our app to DOM, we give that honor to\nEngine")),Object(o.b)("p",null,"That's it! We are running an Engine app now."),Object(o.b)("p",null,"Now that we have our engine app set. Let's do some chores to set the stage for\nbuilding our glorious TodoMVC app:"),Object(o.b)("h3",{id:"add-styles"},"Add styles"),Object(o.b)("p",null,"We want to keep our focus on building the React side of things. Let's install\n",Object(o.b)("inlineCode",{parentName:"p"},"todomvc-app-css")," npm package provided by good people behind the TodoMVC\nproject with ",Object(o.b)("inlineCode",{parentName:"p"},"yarn add todomvc-app-css"),", and update our ",Object(o.b)("inlineCode",{parentName:"p"},"src/index.tsx")," file to\nuse it:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-diff"}),'- import "./index.css";\n+ import "todomvc-app-css/index.css";\nimport App from "./App";\n- import * as serviceWorker from "./serviceWorker";\n...\n- // If you want your app to work offline and load faster, you can change\n- // unregister() to register() below. Note this comes with some pitfalls.\n- // Learn more about service workers: https://bit.ly/CRA-PWA\n- serviceWorker.unregister();\n')),Object(o.b)("p",null,"We have"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Imported CSS from ",Object(o.b)("inlineCode",{parentName:"li"},"todomvc-app-css")),Object(o.b)("li",{parentName:"ul"},"Removed ",Object(o.b)("inlineCode",{parentName:"li"},"create-react-app"),"'s default css and service worker code that we are\nnot going to use. We can safely delete them:",Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"rm src/index.css\nrm src/serviceWorker.ts\n")))),Object(o.b)("h3",{id:"starter-markup"},"Starter Markup"),Object(o.b)("p",null,"While we are at it, let's also update ",Object(o.b)("inlineCode",{parentName:"p"},"/src/App.tsx")," and add some markup to\nmake our app feel more like the TodoMVC. Replace contents of ",Object(o.b)("inlineCode",{parentName:"p"},"/src/App.tsx"),"\nwith:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-tsx"}),'import React from "react";\n\nconst App = () => (\n  <section className="todoapp">\n    <div>\n      <header className="header">\n        <h1>todos</h1>\n      </header>\n    </div>\n  </section>\n);\n\nexport default App;\n')),Object(o.b)("p",null,"Replacing the default JSX allow us to remove some more code that is dead now:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"rm src/App.css\nrm public/logo*\n")),Object(o.b)("p",null,"Remember that our CSS for our app is provided by ",Object(o.b)("inlineCode",{parentName:"p"},"todomvc-app-css")," npm package.\nAs long as we are using correct CSS classes, our app will keep looking right."))}s.isMDXComponent=!0},82:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),s=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(n),b=a,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||o;return n?r.a.createElement(m,c(c({ref:t},l),{},{components:n})):r.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);