(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{62:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return b}));var i=n(2),o=n(6),a=(n(0),n(72)),r={id:"introduction",title:"Introduction",sidebar_label:"Introduction"},l={unversionedId:"introduction",id:"introduction",isDocsHomePage:!0,title:"Introduction",description:"What is Code11 Engine?",source:"@site/docs/introduction.md",permalink:"/engine/docs/",editUrl:"https://github.com/code11/engine/edit/master/docs/docs/introduction.md",sidebar_label:"Introduction",sidebar:"someSidebar",next:{title:"Usage",permalink:"/engine/docs/usage"}},c=[{value:"What is Code<sup>11</sup> Engine?",id:"what-is-code11-engine",children:[]},{value:"Goals",id:"goals",children:[]},{value:"Principles",id:"principles",children:[]}],s={rightToc:c};function b(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h3",{id:"what-is-code11-engine"},"What is Code",Object(a.b)("sup",null,"11")," Engine?"),Object(a.b)("p",null,"At its core, Engine is a state management system (like Redux and MobX) which\nkeenly focuses on developer productivity instead of some puritan ideals which\nmake your job harder."),Object(a.b)("p",null,"But core is more than that. It goes as far as it needs to, to achieve its goals:"),Object(a.b)("h3",{id:"goals"},"Goals"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Be Productive:")," Optimized for developer productivity. We prefer blood magic over boilerplate"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Be Fast:")," Engine is very careful about what it'll cause to re-render, and\ndon't waste CPU cycles unnecessarily")),Object(a.b)("h3",{id:"principles"},"Principles"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Single global State"),Object(a.b)("br",null),"\nMaintaining a global state is very helpful, but also extremely wasteful. In\nmost systems, it lead to one or more compromises."),Object(a.b)("ol",{parentName:"li"},Object(a.b)("li",{parentName:"ol"},"Components end up re-rendering unnecessarily even when nothing they depend\non have actually changed."),Object(a.b)("li",{parentName:"ol"},"Developers have to do a lot of thinking about how to efficiently pick\nwhat they need from state, e.g in selectors. Selectors often become\nperformance bottlenecks simply because of the shear rate of execution."))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"No Boilerplate"),Object(a.b)("br",null)),Object(a.b)("p",{parentName:"li"},"Engine takes developer productivity extremely seriously. We try to achieve it\nby:"),Object(a.b)("ol",{parentName:"li"},Object(a.b)("li",{parentName:"ol"},"Eliminating all boilerplate",Object(a.b)("br",null)),Object(a.b)("li",{parentName:"ol"},"Being easy to use and understand"),Object(a.b)("li",{parentName:"ol"},"Being intuitive")))))}b.isMDXComponent=!0}}]);